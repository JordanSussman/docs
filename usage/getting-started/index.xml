<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vela â€“ Getting Started</title>
    <link>https://go-vela.github.io/docs/usage/getting-started/</link>
    <description>Recent content in Getting Started on Vela</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://go-vela.github.io/docs/usage/getting-started/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Usage: Authenticate</title>
      <link>https://go-vela.github.io/docs/usage/getting-started/authenticate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/usage/getting-started/authenticate/</guid>
      <description>
        
        
        



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;
These docs assume you have Vela running.
&lt;/div&gt;


&lt;h2 id=&#34;ui&#34;&gt;UI&lt;/h2&gt;

&lt;p&gt;Navigate to your deployed instance and follow the OAuth workflow presented on the web interface.&lt;/p&gt;

&lt;h2 id=&#34;cli&#34;&gt;CLI&lt;/h2&gt;

&lt;p&gt;Please see authentication in the &lt;a href=&#34;https://go-vela.github.io/docs/docs/cli/authentication/&#34;&gt;CLI reference&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you have not yet installed the CLI, see &lt;a href=&#34;https://go-vela.github.io/docs/docs/cli/install/&#34;&gt;CLI install reference&lt;/a&gt; first.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;api&#34;&gt;API&lt;/h2&gt;

&lt;p&gt;Please see authentication in the &lt;a href=&#34;https://go-vela.github.io/docs/docs/api/authentication/&#34;&gt;API reference&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;sdk&#34;&gt;SDK&lt;/h2&gt;

&lt;p&gt;Please see authentication in the &lt;a href=&#34;https://go-vela.github.io/docs/docs/sdk/go/authentication/&#34;&gt;sdk reference&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Usage: Roles</title>
      <link>https://go-vela.github.io/docs/usage/getting-started/roles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/usage/getting-started/roles/</guid>
      <description>
        
        
        



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;
At this time the only Source Control Provider is GitHub. So this documentation is tailored for those users.
&lt;/div&gt;


&lt;p&gt;Vela does not maintain any authentication (AuthN) or authorization (AuthZ) internally, but instead inherits its access from the source (version control) provider. More information on GitHub&amp;rsquo;s access model can be found in their &lt;a href=&#34;https://help.github.com/en/github/getting-started-with-github/access-permissions-on-github&#34; target=&#34;_blank&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Platform Roles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Admin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Source Provider Roles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Admin&lt;/li&gt;
&lt;li&gt;Write&lt;/li&gt;
&lt;li&gt;Read&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;platform-roles&#34;&gt;Platform Roles&lt;/h3&gt;

&lt;p&gt;Platform admins have full control when interacting with the CLI, UI, and API.&lt;/p&gt;

&lt;h3 id=&#34;source-provider-roles&#34;&gt;Source Provider Roles:&lt;/h3&gt;

&lt;p&gt;Admins within the GitHub organization have the option to use GitHub orgs to allow users to have permissions on all repositories in the org, or to use fine-grained access of adding access for users directly to individual repositories.&lt;/p&gt;

&lt;h4 id=&#34;admin&#34;&gt;Admin&lt;/h4&gt;

&lt;p&gt;The &lt;strong&gt;admin&lt;/strong&gt; role enables full access to the repository, which grants the following access levels for resources:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Access&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Repo&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Build&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Step&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Service&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Log&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Secret&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Write&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Read&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;write&#34;&gt;Write&lt;/h4&gt;

&lt;p&gt;The &lt;strong&gt;write&lt;/strong&gt; role enables read and write access to the repository, which grants the following access levels for resources:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Access&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Repo&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Build&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Step&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Service&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Log&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Secret&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Write&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Read&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;read&#34;&gt;Read&lt;/h4&gt;

&lt;p&gt;The &lt;strong&gt;read&lt;/strong&gt; role enables read access to the repository, which grants the following access levels for resources:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Access&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Repo&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Build&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Step&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Service&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Log&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Secret&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Write&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Read&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Usage: Enable a Repo</title>
      <link>https://go-vela.github.io/docs/usage/getting-started/enable_repo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/usage/getting-started/enable_repo/</guid>
      <description>
        
        
        



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
You will need &lt;strong&gt;Admin&lt;/strong&gt; access to the repo to be able to activate it in Vela. This is because you need &lt;strong&gt;Admin&lt;/strong&gt; access to be able to add webhooks
to the repo.
&lt;/div&gt;


&lt;h3 id=&#34;via-the-ui&#34;&gt;Via the UI&lt;/h3&gt;

&lt;p&gt;For this example, we&amp;rsquo;ll go over using the UI to add the repo. You can always head over to the &lt;a href=&#34;https://go-vela.github.io/docs/docs/cli/repo/add/&#34;&gt;CLI docs&lt;/a&gt; for docs on how to add a repo via CLI.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Log into your Vela instance.&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Add Repositories&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Select the Org from the available list.&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Add&amp;rdquo; next to the repo you would like to add.

&lt;ol&gt;
&lt;li&gt;Alternatively you can &amp;ldquo;Add All&amp;rdquo; repos in an org.&lt;/li&gt;
&lt;li&gt;If your repo doesn&amp;rsquo;t exist, try clicking &amp;ldquo;Refresh List&amp;rdquo; in the top right.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Your repo now has the necessary web hook to Vela.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Usage: Start a Build</title>
      <link>https://go-vela.github.io/docs/usage/getting-started/start_build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/usage/getting-started/start_build/</guid>
      <description>
        
        
        &lt;p&gt;If you&amp;rsquo;ve followed the documentation for &lt;a href=&#34;https://go-vela.github.io/docs/docs/usage/getting-started/enable_repo/&#34;&gt;enabling a repo&lt;/a&gt; and &lt;a href=&#34;https://go-vela.github.io/docs/docs/usage/getting-started/write_pipeline/&#34;&gt;writing a pipeline&lt;/a&gt;, all that should be left is to push your pipeline to your repo.&lt;/p&gt;

&lt;p&gt;If a build does not trigger when your push a change to your repo, check the webhook response to see if there is an error.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Usage: Skipping a Build</title>
      <link>https://go-vela.github.io/docs/usage/getting-started/skipping_build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/usage/getting-started/skipping_build/</guid>
      <description>
        
        
        &lt;p&gt;To prevent Vela from running a build for a commit, add one of the following to your commit title or message:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[skip ci]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[ci skip]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[skip vela]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[vela skip]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;***no_ci***&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
You can use upper or lower case.
&lt;/div&gt;


&lt;p&gt;Vela will receive the payload from the source control provider and return a 200 response with a reason for why a build was not triggered.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Usage: Using the Environment</title>
      <link>https://go-vela.github.io/docs/usage/getting-started/environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/usage/getting-started/environment/</guid>
      <description>
        
        
        

&lt;p&gt;Vela provides the ability to define environment variables scoped to individual steps, services and secrets. Pleas note the environment is design to be unique per container. Vela does inject a variety of default values from build, repo and user information.&lt;/p&gt;

&lt;p&gt;Defaults:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/concepts/pipeline/services/environment/#defaults&#34; target=&#34;_blank&#34;&gt;Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/concepts/pipeline/steps/environment/#defaults&#34; target=&#34;_blank&#34;&gt;Steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;p&gt;The following &lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline&#34;&gt;pipeline concepts&lt;/a&gt; are being used in the pipeline below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/services/&#34;&gt;Services&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/steps/environment/&#34;&gt;Environment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/steps/&#34;&gt;Steps&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/steps/environment/&#34;&gt;Environment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/secrets/&#34;&gt;Secrets&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/steps/origin/&#34;&gt;Origin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
&lt;p&gt;Please be warned that &lt;code&gt;${variable}&lt;/code&gt; expressions are subject to pre-processing.&lt;/p&gt;

&lt;p&gt;If you do not want the pre-processor to evaluate your expression it must be escaped.&lt;/p&gt;

&lt;/div&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;version: &amp;#34;1&amp;#34;
services:
  - name: redis
&lt;span style=&#34;color:#00a000&#34;&gt;+   environment:
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     EXAMPLE: Hello, World!
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;    image: redis:latest

steps:
  - name: check status
    image: redis:latest
&lt;span style=&#34;color:#00a000&#34;&gt;+   environment:
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     EXAMPLE: Hello, World!
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;    commands:
      # you can use bash commands in-line to set or override variables
      - export EXAMPLE=&amp;#34;Hello World From Vela Team&amp;#34;
      - echo ${EXAMPLE}

secrets:
  - origin:
      name: private vault
      image: target/secret-vault:latest
&lt;span style=&#34;color:#00a000&#34;&gt;+     environment:
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+       EXAMPLE: Hello, World!
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;      secrets: [ vault_token ]
      parameters:
        addr: vault.example.com
        auth_method: token
        username: octocat
        items:
          - source: secret/docker
            path: docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Usage: Building Docker Images</title>
      <link>https://go-vela.github.io/docs/usage/getting-started/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/usage/getting-started/docker/</guid>
      <description>
        
        
        

&lt;p&gt;We assume you understand how to build and run Docker images. If you need assistance on how to get started with Docker; we recommend you see their documentation for &lt;a href=&#34;https://docs.docker.com/get-started/&#34; target=&#34;_blank&#34;&gt;getting set up&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vela runs all workloads within Docker containers. Which essentially gives us two core different ways to build Docker images:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Without elevated daemon access&lt;/li&gt;
&lt;li&gt;With elevated daemon access&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both options have disadvantages and advantages, so we encourage all Vela administrators to weigh the pros/cons of how they want to build Docker images for their cluster.&lt;/p&gt;

&lt;h2 id=&#34;without-elevated-daemon-access&#34;&gt;Without elevated daemon access&lt;/h2&gt;

&lt;p&gt;Building an image without elevated access gives administrators the most secure pattern for not allowing any elevated access to the workers within the cluster. There are two plugin options for building those images:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/plugins/pipeline/registry/kaniko/&#34;&gt;vela-kaniko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/plugins/pipeline/registry/makisu/&#34;&gt;vela-makisu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We recommend customers read the &lt;a href=&#34;https://go-vela.github.io/docs/docs/usage/getting-started/docker/#additional-resources&#34;&gt;tool comparisons&lt;/a&gt; before picking a technology for building their images. In-depth examples for building with either utility are available within their respective plugin documentation pages. A simple example is provided below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;version: &amp;#34;1&amp;#34;
steps:
&lt;span style=&#34;color:#00a000&#34;&gt;+ - name: build and publish with kaniko
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   image: target/vela-kaniko:latest
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   pull: always
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   parameters:
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     registry: index.docker.io
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     repo: index.docker.io/octocat/hello-world
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#00a000&#34;&gt;+ - name: build and publish with makisu
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   image: target/vela-makisu:latest
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   pull: always
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   parameters:
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     registry: index.docker.io
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     tag: index.docker.io/octocat/hello-world
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     pushes: [ index.docker.io ]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;with-elevated-daemon-access&#34;&gt;With elevated daemon access&lt;/h2&gt;

&lt;p&gt;Building an image with elevated access is a allowed pattern as long as the administrators have set the required allow list of images on the worker. It&amp;rsquo;s &lt;em&gt;important to work with your administrator&lt;/em&gt; to understand stand which pattern you instances was deployed to support. The supported plugin for building those images:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/plugins/pipeline/registry/docker/&#34;&gt;vela-kaniko&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;version: &amp;#34;1&amp;#34;
steps:
&lt;span style=&#34;color:#00a000&#34;&gt;+ - name: build and publish with Dockers build kit
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   image: target/vela-docker:latest
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   pull: always
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   parameters:
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     registry: index.docker.io
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     tags: [ index.docker.io/octocat/hello-world ]
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#00a000&#34;&gt;+ - name: build and publish with Dockers without build kit
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   image: target/vela-docker:latest
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   environment:
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     DOCKER_BUILDKIT=0   
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   pull: always
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+   parameters:
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     registry: index.docker.io
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+     tags: [ index.docker.io/octocat/hello-world ]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;additional-resources&#34;&gt;Additional Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.jessfraz.com/post/building-container-images-securely-on-kubernetes/&#34; target=&#34;_blank&#34;&gt;Building Container Images Securely on Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/opencontainers/runc/pull/1692&#34; target=&#34;_blank&#34;&gt;Why is building rootless so hard?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://eng.uber.com/makisu/&#34; target=&#34;_blank&#34;&gt;Introducing Makisu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/GoogleContainerTools/kaniko#comparison-with-other-tools&#34; target=&#34;_blank&#34;&gt;Kaniko tools comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/uber/makisu#comparison-with-similar-tools&#34; target=&#34;_blank&#34;&gt;Makisu tools comparison&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Usage: Understanding the Workspace</title>
      <link>https://go-vela.github.io/docs/usage/getting-started/workspace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/usage/getting-started/workspace/</guid>
      <description>
        
        
        

&lt;p&gt;Vela uses a shared volume model between steps to allow shared file system during the build process. These volumes should be considered ephemeral in the sense once a build completes execution all data via the volume being destroyed.&lt;/p&gt;

&lt;h2 id=&#34;working-directory&#34;&gt;Working Directory&lt;/h2&gt;

&lt;p&gt;This ensures the configuration, code, dependencies, and compiled binaries are persisted and shared between the steps. The default workspace attached to every build is unique and matches the below pattern:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Syntax&lt;/span&gt;
/vela/src/&amp;lt;source_provider/&amp;lt;&lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; org&amp;gt;/&amp;lt;&lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; repo&amp;gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Example&lt;/span&gt;
/vela/src/github.com/go-vela/hello-world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Secrets:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Syntax&lt;/span&gt;
/vela/secrets/&amp;lt;path&amp;gt;/&amp;lt;key&amp;gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Example&lt;/span&gt;
/vela/secrets/github/username/
/vela/secrets/github/password/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Syntax&lt;/span&gt;
/vela/secrets/&amp;lt;path&amp;gt;/&amp;lt;key&amp;gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Example&lt;/span&gt;
/vela/parameters/github/repo/settings/topics&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

Before you use the parameters volume check the plugin authors docs to ensure it has support to read from &lt;code&gt;/vela/parameters&lt;/code&gt;
&lt;/div&gt;


&lt;p&gt;This would be the equivalent to the following Docker commands being executed:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;docker volume create build-workspace

docker run --volume&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;build-workspace:/vela/ &amp;lt;image&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;cloning&#34;&gt;Cloning&lt;/h2&gt;

&lt;p&gt;Vela automatically checks out the repository into a local volume that is mounted into each Docker container. This volume is generally referred to as a workspace, which defines the working directory shared by all steps in a build.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;git clone https://github.com/go-vela/hello-world.git &amp;lt;workspace&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

In cases where your clone needs special configuration you should add a step at the beginning of the pipeline adding the desired behavior.
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Usage: Pull Policies</title>
      <link>https://go-vela.github.io/docs/usage/getting-started/pull_policies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/usage/getting-started/pull_policies/</guid>
      <description>
        
        
        

&lt;p&gt;Vela provides the ability to define how and when the images for secrets, steps, and services will be retrieved at runtime.&lt;/p&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;p&gt;The following &lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline&#34;&gt;pipeline concepts&lt;/a&gt; are being used in the pipeline below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/services/&#34;&gt;Services&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/services/pull/&#34;&gt;Pull&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/steps/&#34;&gt;Steps&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/steps/pull/&#34;&gt;Pull&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/secrets/&#34;&gt;Secrets&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/steps/origin/&#34;&gt;Origin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;
&lt;p&gt;Please be warned that the &lt;code&gt;pull&lt;/code&gt; declaration is &lt;strong&gt;not required&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you do not provide the &lt;code&gt;pull&lt;/code&gt; declaration, a default value of &lt;code&gt;not_present&lt;/code&gt; will be used.&lt;/p&gt;

&lt;/div&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;version: &amp;#34;1&amp;#34;
services:
  - name: redis
    image: redis:latest
&lt;span style=&#34;color:#00a000&#34;&gt;+   pull: always
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;
steps:
  - name: check status
    image: alpine:latest
&lt;span style=&#34;color:#00a000&#34;&gt;+   pull: not_present
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;    commands:
      # you can use bash commands in-line to set or override variables
      - export EXAMPLE=&amp;#34;Hello World From Vela Team&amp;#34;
      - echo ${EXAMPLE}

secrets:
  - origin:
      name: private vault
      image: target/secret-vault:latest
&lt;span style=&#34;color:#00a000&#34;&gt;+     pull: on_start
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;      secrets: [ vault_token ]
      parameters:
        addr: vault.example.com
        auth_method: token
        username: octocat
        items:
          - source: secret/docker
            path: docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

This pipeline will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;always attempt to pull the &lt;code&gt;redis:latest&lt;/code&gt; image, even if it exists locally&lt;/li&gt;
&lt;li&gt;only pull the &lt;code&gt;alpine:latest&lt;/code&gt; image if it doesn&amp;rsquo;t already exist locally&lt;/li&gt;
&lt;li&gt;wait to pull the &lt;code&gt;target/secret-vault:latest&lt;/code&gt; image until right before starting the container&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;


      </description>
    </item>
    
  </channel>
</rss>
