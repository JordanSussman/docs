<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vela â€“ Services</title>
    <link>https://go-vela.github.io/docs/concepts/pipeline/services/</link>
    <description>Recent content in Services on Vela</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://go-vela.github.io/docs/concepts/pipeline/services/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Concepts: Entrypoint</title>
      <link>https://go-vela.github.io/docs/concepts/pipeline/services/entrypoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/concepts/pipeline/services/entrypoint/</guid>
      <description>
        
        
        

&lt;p&gt;The &lt;code&gt;entrypoint&lt;/code&gt; component is a part of a &lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/services/&#34;&gt;service&lt;/a&gt; for Vela.&lt;/p&gt;

&lt;p&gt;This declaration allows you to provide the command to execute inside the container.&lt;/p&gt;

&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;

&lt;p&gt;The following is an example of valid syntax for the component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;version: &amp;#34;1&amp;#34;

metadata:
  template: false

services:
  - name: postgres
    image: postgres:12
&lt;span style=&#34;color:#00a000&#34;&gt;+    entrypoint: &amp;#34;/docker-entrypoint.sh&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;
steps:
  - name: test
    image: golang
    environment:
      DATABASE_DRIVER: postgres
      DATABASE_CONFIG: &amp;#39;postgres://postgres@postgres:5432/postgres?sslmode=disable&amp;#39;
    commands:
      - go test ./...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

This pipeline will start the &lt;code&gt;postgres&lt;/code&gt; service first, then run the &lt;code&gt;test&lt;/code&gt; step.
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Concepts: Environment</title>
      <link>https://go-vela.github.io/docs/concepts/pipeline/services/environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/concepts/pipeline/services/environment/</guid>
      <description>
        
        
        

&lt;p&gt;The &lt;code&gt;environment&lt;/code&gt; component is a part of a &lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/services/&#34;&gt;service&lt;/a&gt; for Vela.&lt;/p&gt;

&lt;p&gt;This declaration allows you to provide variables injected into the container environment.&lt;/p&gt;

&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;

&lt;p&gt;The following is an example of valid syntax for the component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;version: &amp;#34;1&amp;#34;

metadata:
  template: false

services:
  - name: postgres
    image: postgres:12
&lt;span style=&#34;color:#00a000&#34;&gt;+    environment:
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+      POSTGRES_DB: example
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+      POSTGRES_USER: example
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;
steps:
  - name: test
    image: golang
    environment:
      DATABASE_DRIVER: postgres
      DATABASE_CONFIG: &amp;#39;postgres://example@postgres:5432/example?sslmode=disable&amp;#39;
    commands:
      - go test ./...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

This pipeline will start the &lt;code&gt;postgres&lt;/code&gt; service first, then run the &lt;code&gt;test&lt;/code&gt; step.
&lt;/div&gt;


&lt;h2 id=&#34;defaults&#34;&gt;Defaults&lt;/h2&gt;



&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip:&lt;/h4&gt;
Full list is available in the &lt;a href=&#34;https://go-vela.github.io/docs/docs/reference/environment/&#34;&gt;environment reference&lt;/a&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Concepts: Image</title>
      <link>https://go-vela.github.io/docs/concepts/pipeline/services/image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/concepts/pipeline/services/image/</guid>
      <description>
        
        
        

&lt;p&gt;The &lt;code&gt;image&lt;/code&gt; component is a part of a &lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/services/&#34;&gt;service&lt;/a&gt; for Vela.&lt;/p&gt;

&lt;p&gt;This declaration allows you to provide the &lt;a href=&#34;https://docs.docker.com/engine/docker-overview/#images&#34; target=&#34;_blank&#34;&gt;Docker image&lt;/a&gt; used to create the ephemeral container.&lt;/p&gt;



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

All Vela services will require an &lt;code&gt;image&lt;/code&gt; declaration to be provided.
&lt;/div&gt;


&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Any valid &lt;a href=&#34;https://docs.docker.com/engine/docker-overview/#images&#34; target=&#34;_blank&#34;&gt;Docker image&lt;/a&gt; in any publicly accessible &lt;a href=&#34;https://docs.docker.com/registry/&#34; target=&#34;_blank&#34;&gt;Docker registry&lt;/a&gt; can be used for the container.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;image&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;golang&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;image&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;golang&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;latest&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;image&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;golang&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.12&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;image&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;library/golang&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.12&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;image&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;index.docker.io/library/golang&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;image&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;index.docker.io/library/golang&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.12&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

All the above images would pull an image from the &lt;a href=&#34;https://hub.docker.com/_/golang&#34; target=&#34;_blank&#34;&gt;golang Docker repository&lt;/a&gt;.
&lt;/div&gt;


&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;

&lt;p&gt;The following is an example of valid syntax for the component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;version: &amp;#34;1&amp;#34;

metadata:
  template: false

services:
  - name: postgres
&lt;span style=&#34;color:#00a000&#34;&gt;+    image: postgres:12
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;    pull: always

steps:
  - name: test
    image: golang
    environment:
      DATABASE_DRIVER: postgres
      DATABASE_CONFIG: &amp;#39;postgres://postgres@postgres:5432/postgres?sslmode=disable&amp;#39;
    commands:
      - go test ./...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

This pipeline will start the &lt;code&gt;postgres&lt;/code&gt; service first, then run the &lt;code&gt;test&lt;/code&gt; step.
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Concepts: Ports</title>
      <link>https://go-vela.github.io/docs/concepts/pipeline/services/ports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/concepts/pipeline/services/ports/</guid>
      <description>
        
        
        

&lt;p&gt;The &lt;code&gt;ports&lt;/code&gt; component is a part of a &lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/services/&#34;&gt;service&lt;/a&gt; for Vela.&lt;/p&gt;

&lt;p&gt;This declaration allows you to provide a list of ports to map for the container in the pipeline.&lt;/p&gt;

&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;

&lt;p&gt;The following is an example of valid syntax for the component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;version: &amp;#34;1&amp;#34;

metadata:
  template: false

services:
  - name: postgres
    image: postgres:12
&lt;span style=&#34;color:#00a000&#34;&gt;+    ports:
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;+      - &amp;#34;5432:5432&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;
steps:
  - name: test
    image: golang
    environment:
      DATABASE_DRIVER: postgres
      DATABASE_CONFIG: &amp;#39;postgres://postgres@postgres:5432/postgres?sslmode=disable&amp;#39;
    commands:
      - go test ./...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

This pipeline will start the &lt;code&gt;postgres&lt;/code&gt; service first, then run the &lt;code&gt;test&lt;/code&gt; step.
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Concepts: Pull</title>
      <link>https://go-vela.github.io/docs/concepts/pipeline/services/pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go-vela.github.io/docs/concepts/pipeline/services/pull/</guid>
      <description>
        
        
        

&lt;p&gt;The &lt;code&gt;pull&lt;/code&gt; component is a part of a &lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/services/&#34;&gt;service&lt;/a&gt; for Vela.&lt;/p&gt;

&lt;p&gt;This declaration allows you to control how and when Vela will attempt to pull the &lt;a href=&#34;https://go-vela.github.io/docs/docs/concepts/pipeline/services/image/&#34;&gt;image&lt;/a&gt; provided for the service.&lt;/p&gt;



&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;This component has a default value of &lt;code&gt;not_present&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This means Vela will always attempt to pull from its existing cache for images.&lt;/p&gt;

&lt;/div&gt;


&lt;h2 id=&#34;options&#34;&gt;Options&lt;/h2&gt;

&lt;p&gt;The following options are available to configure the component:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;always&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;attempt to pull the image even if it exists in the local cache&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;never&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;assumes the image already exists in the local cache&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;not_present&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;only pull the image if it does not exist in the local cache&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;on_start&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;waits to pull the image until right before starting the container&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;

&lt;p&gt;The following is an example of valid syntax for the component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;version: &amp;#34;1&amp;#34;

metadata:
  template: false

services:
  - name: postgres
    image: postgres:12
&lt;span style=&#34;color:#00a000&#34;&gt;+   pull: not_present
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;
steps:
  - name: test
    image: golang
&lt;span style=&#34;color:#00a000&#34;&gt;+   pull: always
&lt;/span&gt;&lt;span style=&#34;color:#00a000&#34;&gt;&lt;/span&gt;    environment:
      DATABASE_DRIVER: postgres
      DATABASE_CONFIG: &amp;#39;postgres://postgres@postgres:5432/postgres?sslmode=disable&amp;#39;
    commands:
      - go test ./...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

This pipeline will start the &lt;code&gt;postgres&lt;/code&gt; service first, then run the &lt;code&gt;test&lt;/code&gt; step.
&lt;/div&gt;


      </description>
    </item>
    
  </channel>
</rss>
